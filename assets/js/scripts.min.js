/*! lasourisetlepiano-2015 - v1.0.0 - 2015-07-24
* Copyright (c) 2015 ; Licensed  */
function removePhoneHref(a) {
    if ($("html").hasClass("no-touch")) {
        var b = $(a), c = b.html();
        b.parent().append(c), b.remove();
    }
}

function sameSize(a, b, c, d) {
    $(b).css(c, $(a).outerHeight() * d);
}

function hideClass(a) {
    $(a).hide();
}

function toggleBullet(a) {
    var b = $(a).find("li"), c = 0, d = 1300, e = [];
    b.addClass("hidden-diapo-list"), jQuery(b).each(function(a) {
        var f = jQuery(this);
        e[c] = setTimeout(function() {
            b.addClass("hidden-diapo-list").removeClass("visible-diapo-list"), f.removeClass("hidden-diapo-list").addClass("visible-diapo-list");
        }, c * d), c++;
    });
}

function resizeMap(a) {
    document.getElementById(a) && $(window).resize(function(b) {
        setTimeout(initialisationGMap(a), 1e3);
    });
}

function displayInfoWindow(a, b, c, d) {
    google.maps.event.addListener(b, d, function() {
        c.setContent(b.messageContent), c.open(a, b);
    });
}

function initialisationGMap(a) {
    if (document.getElementById(a)) if ($("#" + a).css("background", "url(" + imageFolder + "map/loader.gif) center center no-repeat"), 
    $("html").hasClass("no-touch")) {
        $("#mapWrapperLink").removeAttr("href", ""), sameSize("#hcard-la_souris_et_le_piano", "#" + a, "padding-top", 1.3);
        var b, c = new google.maps.LatLng(48.8655, 2.392), d = new google.maps.LatLng(48.86615, 2.39425), e = new google.maps.LatLng(48.8648, 2.394655), f = new google.maps.LatLng(48.86482, 2.398335), g = imageFolder;
        g += $("html").hasClass("no-svg") ? "map/location-coordonnees.png" : "map/location-coordonnees.svg", 
        b = $("#" + a).width() < 650 ? 15 : 16;
        var h, i, j, k = new google.maps.MarkerImage(g, new google.maps.Size(70, 70), new google.maps.Point(0, 0)), l = new google.maps.MarkerImage(g, new google.maps.Size(40, 40), new google.maps.Point(10, 75)), m = {
            zoom: b,
            center: c,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }, n = new google.maps.Map(document.getElementById(a), m), o = new google.maps.InfoWindow();
        h = new google.maps.Marker({
            icon: k,
            position: d,
            map: n,
            messageTitle: "La souris et le piano",
            messageContent: "C'est ici!"
        }), i = new google.maps.Marker({
            icon: l,
            position: f,
            map: n,
            messageTitle: "Métro 3 et 3bis Gambetta",
            messageContent: "Sortie place Gambetta ou Mairie du 20ème"
        }), j = new google.maps.Marker({
            icon: l,
            position: e,
            map: n,
            messageTitle: "Métro 3 et 3bis Gambetta",
            messageContent: "Sortie place Martin Nadaud"
        });
        var p, q, r = [ h, i, j ];
        for (p = r.length - 1; p >= 0; p--) q = '<div class="infowindow"><span><strong>' + r[p].messageTitle + "</strong><br/></span>", 
        r[p].messageContent = q + "<span>" + r[p].messageContent + "</span></div>", displayInfoWindow(n, r[p], o, "mouseover");
    } else $("#" + a).css("background-image", "url(" + imageFolder + "map/mapHd.png)"), 
    $("#" + a).click(function() {
        window.open("http://goo.gl/maps/RgCDv");
    });
}

function loadVideo(a) {
    document.getElementsByClassName(a) && ($(".video-player").append('<div class="embed-video"></div>'), 
    $(".video-player").click(function(a) {
        a.stopPropagation();
        var b = document.getElementById(this.id), c = $(b).attr("data-videohost"), d = $(b).attr("data-source"), e = $(b).parent().width(), f = .52734375 * e;
        "youtube" == c ? (videoId = d.replace("http://youtu.be/", ""), videoId = d.replace("https://youtu.be/", ""), 
        iframe = "<iframe width='" + e + " 'height='" + f + "' src='http://www.youtube.com/embed/" + videoId + "?autoplay=1&amp;rel=0' frameborder='0' allowfullscreen></iframe>", 
        $(b).children(".embed-video").html(iframe)) : "vimeo" == c ? (videoId = d.replace("http://vimeo.com/", ""), 
        iframe = "<iframe src='http://player.vimeo.com/video/" + videoId + "?title=0&amp;byline=0&amp;portrait=0&amp;autoplay=1' width='" + e + "' height='" + f + "'' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>", 
        $(b).children(".embed-video").html(iframe)) : $(b).children(".embed-video").html("<h1>Impossible de jouer la vidéo pour le moment");
    }));
}

function writeCookie(a, b, c) {
    var d, e;
    c ? (d = new Date(), d.setTime(d.getTime() + 24 * c * 60 * 60 * 1e3), e = "; expires=" + d.toGMTString()) : e = "", 
    document.cookie = a + "=" + b + e + "; path=/";
}

function readCookie(a) {
    var b = document.cookie, c = b.indexOf("" + a + "=");
    if (-1 === c && (c = b.indexOf(a + "=")), -1 === c) b = null; else {
        c = b.indexOf("=", c) + 1;
        var d = b.indexOf(";", c);
        -1 === d && (d = b.length), b = unescape(b.substring(c, d));
    }
    return b;
}

function setCookieOnCloseAlert(a, b) {
    document.getElementById(a) && (readCookie(a) === b ? $("#" + a).hide() : $("#" + a + " .close").click(function() {
        writeCookie(a, b, 1);
    }));
}

!function(a, b) {
    "use strict";
    function c(a) {
        this.callback = a, this.ticking = !1;
    }
    function d(b) {
        return b && "undefined" != typeof a && (b === a || b.nodeType);
    }
    function e(a) {
        if (arguments.length <= 0) throw new Error("Missing arguments in extend function");
        var b, c, f = a || {};
        for (c = 1; c < arguments.length; c++) {
            var g = arguments[c] || {};
            for (b in g) "object" != typeof f[b] || d(f[b]) ? f[b] = f[b] || g[b] : f[b] = e(f[b], g[b]);
        }
        return f;
    }
    function f(a) {
        return a === Object(a) ? a : {
            down: a,
            up: a
        };
    }
    function g(a, b) {
        b = e(b, g.options), this.lastKnownScrollY = 0, this.elem = a, this.debouncer = new c(this.update.bind(this)), 
        this.tolerance = f(b.tolerance), this.classes = b.classes, this.offset = b.offset, 
        this.scroller = b.scroller, this.initialised = !1, this.onPin = b.onPin, this.onUnpin = b.onUnpin, 
        this.onTop = b.onTop, this.onNotTop = b.onNotTop;
    }
    var h = {
        bind: !!function() {}.bind,
        classList: "classList" in b.documentElement,
        rAF: !!(a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame)
    };
    a.requestAnimationFrame = a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame, 
    c.prototype = {
        constructor: c,
        update: function() {
            this.callback && this.callback(), this.ticking = !1;
        },
        requestTick: function() {
            this.ticking || (requestAnimationFrame(this.rafCallback || (this.rafCallback = this.update.bind(this))), 
            this.ticking = !0);
        },
        handleEvent: function() {
            this.requestTick();
        }
    }, g.prototype = {
        constructor: g,
        init: function() {
            return g.cutsTheMustard ? (this.elem.classList.add(this.classes.initial), setTimeout(this.attachEvent.bind(this), 100), 
            this) : void 0;
        },
        destroy: function() {
            var a = this.classes;
            this.initialised = !1, this.elem.classList.remove(a.unpinned, a.pinned, a.top, a.initial), 
            this.scroller.removeEventListener("scroll", this.debouncer, !1);
        },
        attachEvent: function() {
            this.initialised || (this.lastKnownScrollY = this.getScrollY(), this.initialised = !0, 
            this.scroller.addEventListener("scroll", this.debouncer, !1), this.debouncer.handleEvent());
        },
        unpin: function() {
            var a = this.elem.classList, b = this.classes;
            (a.contains(b.pinned) || !a.contains(b.unpinned)) && (a.add(b.unpinned), a.remove(b.pinned), 
            this.onUnpin && this.onUnpin.call(this));
        },
        pin: function() {
            var a = this.elem.classList, b = this.classes;
            a.contains(b.unpinned) && (a.remove(b.unpinned), a.add(b.pinned), this.onPin && this.onPin.call(this));
        },
        top: function() {
            var a = this.elem.classList, b = this.classes;
            a.contains(b.top) || (a.add(b.top), a.remove(b.notTop), this.onTop && this.onTop.call(this));
        },
        notTop: function() {
            var a = this.elem.classList, b = this.classes;
            a.contains(b.notTop) || (a.add(b.notTop), a.remove(b.top), this.onNotTop && this.onNotTop.call(this));
        },
        getScrollY: function() {
            return void 0 !== this.scroller.pageYOffset ? this.scroller.pageYOffset : void 0 !== this.scroller.scrollTop ? this.scroller.scrollTop : (b.documentElement || b.body.parentNode || b.body).scrollTop;
        },
        getViewportHeight: function() {
            return a.innerHeight || b.documentElement.clientHeight || b.body.clientHeight;
        },
        getDocumentHeight: function() {
            var a = b.body, c = b.documentElement;
            return Math.max(a.scrollHeight, c.scrollHeight, a.offsetHeight, c.offsetHeight, a.clientHeight, c.clientHeight);
        },
        getElementHeight: function(a) {
            return Math.max(a.scrollHeight, a.offsetHeight, a.clientHeight);
        },
        getScrollerHeight: function() {
            return this.scroller === a || this.scroller === b.body ? this.getDocumentHeight() : this.getElementHeight(this.scroller);
        },
        isOutOfBounds: function(a) {
            var b = 0 > a, c = a + this.getViewportHeight() > this.getScrollerHeight();
            return b || c;
        },
        toleranceExceeded: function(a, b) {
            return Math.abs(a - this.lastKnownScrollY) >= this.tolerance[b];
        },
        shouldUnpin: function(a, b) {
            var c = a > this.lastKnownScrollY, d = a >= this.offset;
            return c && d && b;
        },
        shouldPin: function(a, b) {
            var c = a < this.lastKnownScrollY, d = a <= this.offset;
            return c && b || d;
        },
        update: function() {
            var a = this.getScrollY(), b = a > this.lastKnownScrollY ? "down" : "up", c = this.toleranceExceeded(a, b);
            this.isOutOfBounds(a) || (a <= this.offset ? this.top() : this.notTop(), this.shouldUnpin(a, c) ? this.unpin() : this.shouldPin(a, c) && this.pin(), 
            this.lastKnownScrollY = a);
        }
    }, g.options = {
        tolerance: {
            up: 0,
            down: 0
        },
        offset: 0,
        scroller: a,
        classes: {
            pinned: "headroom--pinned",
            unpinned: "headroom--unpinned",
            top: "headroom--top",
            notTop: "headroom--not-top",
            initial: "headroom"
        }
    }, g.cutsTheMustard = "undefined" != typeof h && h.rAF && h.bind && h.classList, 
    a.Headroom = g;
}(window, document), function(a) {
    a && (a.fn.headroom = function(b) {
        return this.each(function() {
            var c = a(this), d = c.data("headroom"), e = "object" == typeof b && b;
            e = a.extend(!0, {}, Headroom.options, e), d || (d = new Headroom(this, e), d.init(), 
            c.data("headroom", d)), "string" == typeof b && d[b]();
        });
    }, a("[data-headroom]").each(function() {
        var b = a(this);
        b.headroom(b.data());
    }));
}(window.Zepto || window.jQuery);

var themeName = "lasourisetlepiano-2013", jsFilePath = $("script[src*=scripts]").attr("src"), jsFolderPath = jsFilePath.substring(0, jsFilePath.lastIndexOf("/")) + "/", wpDirectory = jsFolderPath.replace("wp-content/themes/" + themeName + "/assets/js/", ""), homeUrl = wpDirectory.replace("wp/", ""), cssFolder = jsFolderPath.replace("js/", "css/"), imageFolder = jsFolderPath.replace("js/", "img/");

!function(a) {
    a("document").ready(function() {
        toggleBullet("#creation-diapo-list"), removePhoneHref(".phone-link"), removePhoneHref(".skype-link"), 
        initialisationGMap("map"), resizeMap("map"), readCookie("alert-development"), setCookieOnCloseAlert("alert-development", "already-seen"), 
        loadVideo("video-wrapper"), a("#top").headroom(), a("#brand").headroom(), a("#menu").headroom();
    });
}(jQuery);